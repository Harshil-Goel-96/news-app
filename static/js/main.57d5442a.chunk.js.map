{"version":3,"sources":["Components/NewsCard/Style.js","Components/NewsCard/NewsCard.js","Components/NewsCards/Style.js","Components/NewsCards/HomeContent.js","Components/NewsCards/NewsCards.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","container","maxWidth","height","display","flexDirection","justifyContent","activecard","borderBottom","media","header","alignItems","actionarea","NewsCard","article","title","description","urlToImage","url","publishedAt","source","author","i","newIndex","classes","console","log","useState","elRefs","setElRefs","useEffect","refs","Array","fill","map","_","j","createRef","ref","window","scroll","current","offsetTop","Card","className","classNames","elevation","CardActionArea","href","target","CardMedia","image","CardContent","Typography","variant","color","name","Date","toDateString","gutterBottom","noWrap","CardActions","Button","size","gridItem","homeCard","flexBasis","padding","textAlign","HomeContent","heading","textColor","bgColor","Example","Desc","NewsCards","articles","length","style","Grid","spacing","justify","key","item","xs","sm","lg","Grow","in","timeout","content","k","md","backgroundColor","split","App","newsArticles","setNewsArticles","setNewIndex","alnBtn","onCommand","command","number","index","prevNewIndex","parsedNumber","WordsToNumbers","fuzzy","playText","open","onClick","fontSize","fontWeight","flexGrow","IconButton","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.57d5442a.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        maxWidth: \"400px\",\r\n        height: \"445px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-between\"\r\n    },\r\n    activecard: {\r\n        borderBottom: \"5px solid #3f51b5\"\r\n    },\r\n    media: {\r\n        height: \"160px\"\r\n    },\r\n    header: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\"\r\n\r\n    },\r\n    actionarea: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\"\r\n    }\r\n});\r\n\r\nexport default useStyles;","import React, { useState, useEffect, createRef } from 'react';\r\nimport { Card, CardActionArea, CardContent, CardMedia, Typography, CardActions, Button } from '@material-ui/core';\r\nimport useStyles from './Style.js';\r\nimport classNames from 'classnames';\r\n\r\nconst NewsCard = ({ article: { title, description, urlToImage, url, publishedAt, author, source }, i, newIndex }) => {\r\n\r\n    const classes = useStyles();\r\n    console.log(\"Card\")\r\n    const [elRefs, setElRefs] = useState([]);\r\n    const scrollToRef = (ref) => window.scroll(0, ref.current.offsetTop - 50);\r\n\r\n    useEffect(() => {\r\n        setElRefs((refs) => Array(20).fill().map((_, j) => refs[j] || createRef()));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (i === newIndex && elRefs[newIndex]) {\r\n            scrollToRef(elRefs[newIndex]);\r\n        }\r\n    }, [i, newIndex, elRefs]);\r\n\r\n\r\n\r\n    return (\r\n        <Card ref={elRefs[i]} className={classNames(classes.container, ((newIndex === i) ? classes.activecard : \"null\"))} elevation={4}>\r\n            <CardActionArea href={url} target=\"_blank\">\r\n                <CardMedia className={classes.media} image={urlToImage || \"https://ak.picdn.net/shutterstock/videos/10027844/thumb/2.jpg\"} title={title} />\r\n                <CardContent className={classes.header}>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">{source.name}</Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">{new Date(publishedAt).toDateString()}</Typography>\r\n                </CardContent>\r\n                <CardContent >\r\n                    <Typography gutterBottom variant=\"body1\" color=\"textPrimary\">{title}</Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" noWrap={true}>{description}</Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n            <CardActions className={classes.actionarea}>\r\n                <Button variant=\"outlined\" size=\"small\" href={url} target=\"_blank\" >Learn More</Button>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" >{i + 1}</Typography>\r\n            </CardActions>\r\n        </Card >\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default NewsCard;","import { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    gridItem: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    homeCard: {\r\n        flexBasis: \"350px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-evenly\",\r\n        alignItems: \"center\",\r\n        height: \"450px\",\r\n        color: \"#E0F2F1\",\r\n        padding: \"20px\",\r\n        textAlign: \"center\",\r\n\r\n    },\r\n\r\n});\r\n\r\nexport default useStyles;","const HomeContent = [\r\n    {\r\n        heading: \"News By Country\",\r\n        textColor: \"White\",\r\n        bgColor: \"#1976D2\",\r\n        Example: \"India, USA, China, Australia etc\",\r\n        Desc: \"Give me the latest news from India\"\r\n\r\n    },\r\n    {\r\n        heading: \"News By Source\",\r\n        textColor: \"White\",\r\n        bgColor: \"#26A69A\",\r\n        Example: \"BBC News, ABC News, CNN, IGN, TechCrunch etc\",\r\n        Desc: \"Give me the top headlines from BBC News OR Tell me the top headlines from CNN\"\r\n\r\n    },\r\n    {\r\n        heading: \"News By Topic\",\r\n        textColor: \"White\",\r\n        bgColor: \"#0097A7\",\r\n        Example: \"Trump, PS5, Coronavirus, Cars etc\",\r\n        Desc: \"What about trump OR Tell me something about PS5\"\r\n\r\n    },\r\n    {\r\n        heading: \"News By Category\",\r\n        textColor: \"White\",\r\n        bgColor: \"#5C6BC0\",\r\n        Example: \"Business, Technology, Entertainment etc\",\r\n        Desc: \"What are the technology headlines from India OR What is the business news from India\"\r\n\r\n    }\r\n];\r\n\r\nexport default HomeContent;","import React from 'react';\r\nimport { Grid, Card, Typography, Grow } from '@material-ui/core';\r\nimport NewsCard from '../NewsCard/NewsCard.js'\r\nimport useStyles from './Style.js';\r\nimport HomeContent from './HomeContent.js';\r\n\r\nconst NewsCards = ({ articles, newIndex }) => {\r\n    //console.log(articles);\r\n    console.log(\"NewsCards\")\r\n    const classes = useStyles();\r\n\r\n    if (!articles.length) {\r\n\r\n        return (\r\n            <Grow in timeout={500}>\r\n                <div style={{ padding: \"35px 20px 20px 20px\" }}>\r\n                    <Grid container spacing={1} justify=\"center\" alignItems=\"center\">\r\n                        {\r\n                            HomeContent.map((content, k) => (\r\n\r\n                                <Grid key={k} item xs={12} sm={6} md={3} lg={3} className={classes.gridItem}>\r\n                                    <Card className={classes.homeCard} style={{ backgroundColor: content.bgColor }} elevation={5}>\r\n                                        <Typography variant=\"h5\">{content.heading}</Typography>\r\n                                        <Typography variant=\"body1\"><strong>{content.heading.split(\" \")[2]} : </strong>{content.Example}</Typography>\r\n                                        <Typography variant=\"body2\"><strong>Try Saying : </strong>{content.Desc}</Typography>\r\n                                    </Card>\r\n                                </Grid>\r\n\r\n                            ))\r\n                        }\r\n\r\n                    </Grid>\r\n\r\n                </div>\r\n            </Grow >);\r\n\r\n    }\r\n    else {\r\n        return (\r\n            <div style={{ padding: \"20px 20px 20px 20px\" }}>\r\n                <Grid container className={classes.container} spacing={2} justify=\"center\" alignItems=\"center\">\r\n                    {\r\n                        articles.map((article, i) => (\r\n\r\n                            <Grid key={i} item xs={12} sm={6} lg={4} className={classes.gridItem}>\r\n                                <NewsCard article={article} i={i} newIndex={newIndex} />\r\n                            </Grid>\r\n\r\n                        ))\r\n                    }\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewsCards;","import React, { useState, useEffect } from \"react\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport alnBtn from \"@alan-ai/alan-sdk-web\";\r\nimport \"./App.css\";\r\nimport NewsCards from \"./Components/NewsCards/NewsCards.js\";\r\nimport WordsToNumbers from \"words-to-numbers\";\r\n\r\nconst App = () => {\r\n  console.log(\"App\");\r\n  const Alankey = \"3f5bfbc63a56197c18c361921f07ef3c2e956eca572e1d8b807a3e2338fdd0dc/stage\";\r\n\r\n  const [newsArticles, setNewsArticles] = useState([]);\r\n  const [newIndex, setNewIndex] = useState(-1);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Before alan useEffect\");\r\n    alnBtn({\r\n      key: Alankey,\r\n      onCommand: ({ command, articles, index, number }) => {\r\n        if (command === \"TopHeadlines\") {\r\n          console.log(\"inside alan\");\r\n          setNewsArticles(articles);\r\n          setNewIndex(-1);\r\n        } else if (command === \"ReadHeadlines\") {\r\n          setNewIndex((prevNewIndex) => prevNewIndex + 1);\r\n        } else if (command === \"Open\") {\r\n          //console.log(number.length)\r\n          const parsedNumber = number.length > 2 ? WordsToNumbers(number, { fuzzy: true }) : number;\r\n          const article = articles[parsedNumber - 1];\r\n          if (parsedNumber > 20) {\r\n            alnBtn().playText(\"Please try again\");\r\n          } else if (articles.length) {\r\n            //console.log(newsArticles);\r\n            window.open(article.url, \"_blank\");\r\n          } else {\r\n            alnBtn().playText(\"No article available to open. Please try something different\");\r\n          }\r\n        }\r\n      },\r\n    });\r\n    console.log(\"After alan useEffect\");\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"main-container\">\r\n      <div className=\"hero\">\r\n        <div className=\"hero-heading\" onClick={() => setNewsArticles([])}>\r\n          <h1>Hey ! Ask me about NEWS</h1>\r\n        </div>\r\n        <div className=\"hero-para\">\r\n          {!newsArticles.length ? (\r\n            <p>\r\n              Try pressing the Hovering Mic button <MicIcon style={{ fontSize: \"1rem\" }} /> at the bottom of this page and ask Alan about the Latest News or about some other stuff.\r\n            </p>\r\n          ) : (\r\n            <p>\r\n              Try saying : <span style={{ fontSize: \"1.2rem\", fontWeight: \"bolder\" }}> Go back Or Open article number 2</span>\r\n            </p>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ backgroundColor: \"#e0f2f1\", flexGrow: 1 }}>\r\n        <NewsCards articles={newsArticles} newIndex={newIndex} />\r\n      </div>\r\n      <div className=\"footer\">\r\n        <p>\r\n          <strong>&copy; Harshil Corp</strong>\r\n        </p>\r\n        <div className=\"follow-pal\">\r\n          <p>\r\n            <strong>Follow : </strong>\r\n          </p>\r\n          <IconButton href=\"https://www.facebook.com/harshil.goel.60\" target=\"_blank\" color=\"inherit\">\r\n            <FacebookIcon className=\"icon\" />\r\n          </IconButton>\r\n          <IconButton href=\"https://www.twitter.com/harshilgoel96?s=01\" target=\"_blank\" color=\"inherit\">\r\n            <TwitterIcon className=\"icon\" />\r\n          </IconButton>\r\n          <IconButton href=\"https://github.com/Harshil-Goel-96/news-app\" target=\"_blank\" color=\"inherit\" size=\"small\">\r\n            <GitHubIcon className=\"icon\" />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}